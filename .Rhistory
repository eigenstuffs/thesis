}
for (i in names(gen_policies)) {
if (i != "Year" & i != "State") {
print(ggplot(gen_policies, aes(x=Year, y=get(i), color=State)) +
geom_line() + theme_bw() + labs(title = i) + theme(
title = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
panel.grid.major.x = element_blank())
)}
}
multinom_label <- c(rep(NA,24))
multinom_coef <- c(rep(NA,24))
multinom_std <- c(rep(NA,24))
multinom_p <- c(rep(NA,24))
multinom_coef_2 <- c(rep(NA,24))
multinom_std_2 <- c(rep(NA,24))
multinom_p_2 <- c(rep(NA,24))
multinom_coef_3 <- c(rep(NA,24))
multinom_std_3 <- c(rep(NA,24))
multinom_p_3 <- c(rep(NA,24))
multinom_coef_4 <- c(rep(NA,24))
multinom_std_4 <- c(rep(NA,24))
multinom_p_4 <- c(rep(NA,24))
multinom_coef_5 <- c(rep(NA,24))
multinom_std_5 <- c(rep(NA,24))
multinom_p_5 <- c(rep(NA,24))
for (i in 3:24) {
if (is.factor(policies[,i])) {
m <- multinom(policies[,i] ~ AdjMeanChamber + factor(State) + factor(Year), data = policies)
sm <- summary(m)
for (k in 1:length(levels(policies[,i]))) {
if (length(levels(policies[,i])) > 2) {
coef_i <- as.numeric(sm$coefficients[,2][k])
std_i <- as.numeric(sm$standard.errors[,2][k])
z <- coef_i/std_i
p_i <- as.numeric(sub(".* ([^ ]+)$", "\\1", (1 - pnorm(abs(z), 0, 1)) * 2))
if (k == 1) {
multinom_coef[i] <- coef_i
multinom_std[i] <- std_i
multinom_p[i] <- p_i
} else if (k == 2) {
multinom_coef_2[i] <- coef_i
multinom_std_2[i] <- std_i
multinom_p_2[i] <- p_i
} else if (k == 3) {
multinom_coef_3[i] <- coef_i
multinom_std_3[i] <- std_i
multinom_p_3[i] <- p_i
} else if (k == 4) {
multinom_coef_4[i] <- coef_i
multinom_std_4[i] <- std_i
multinom_p_4[i] <- p_i
}
} else {
coef_i <- as.numeric(sm$coefficients[2])
std_i <- as.numeric(sm$standard.errors[2])
z <- coef_i/std_i
p_i <- as.numeric(sub(".* ([^ ]+)$", "\\1", (1 - pnorm(abs(z), 0, 1)) * 2))
multinom_coef[i] <- coef_i
multinom_std[i] <- std_i
multinom_p[i] <- p_i
}
}
multinom_label[i] <- colnames(policies)[i]
}
}
multinom_outcomes <- data.frame(multinom_label, multinom_coef, multinom_std, multinom_p,
multinom_coef_2, multinom_std_2, multinom_p_2,      multinom_coef_3, multinom_std_3, multinom_p_3)
multinom_outcomes
multinom_sig <- multinom_outcomes %>% filter(multinom_p < 0.05 | multinom_p_2 < 0.05 | multinom_p_3 < 0.05)
policies_sig <- policies %>% select(Year, State, AdjMeanChamber, CI, EI, environment_ca_car_emissions_standards_21
, environment_ghg_cap_21,
environment_publicbenefit_funds_21,
netmeter_yearadopted_21, w_ghg_targets_21,w4_environment_state_rps_21,
w4_gas_decoupling_21)
policy_descriptions <- c(rep(NA, length(policies_sig)))
policy_descriptions <- c("Year",
"State",
"Chamber",
"CI",
"EI",
"Adoption of CA standards which are stricter than federal level (yes/no)",
"Binding cap on GHG from the utility sector (yes/no)",
"Public benefit fund for renewables/energy efficiency (yes/no)",
"On-site renewable generation? (yes or comparable/no)",
"Emission reduction levels by time (0: none/1: executive order/2: statutory or \npublic utility commission order)",
"Renewable Portfolio Standards (0: no/1: voluntary or <1%/2: mandatory less \nthan 100%/3: mandatory 100%)",
"Compensation for less gas sold by utilities (0: none/1: performance-based/2: \nnon-decoupling eff. adjustment/3: decoupled)")
for (i in 1:ncol(policies)) {
if (is.factor(policies[,i])) {
policies_temp <- policies %>% select(State, Year, AdjMeanChamber) %>% mutate(Variable = policies[,i])
policies_temp <- na.omit(policies_temp)
suppressWarnings(print(ggplot(policies_temp, aes(x=AdjMeanChamber, y=Variable, color=Year)) +
geom_jitter() + theme_bw() + labs(title = colnames(policies)[i]) + theme(
title = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
panel.grid.major.x = element_blank()) + geom_vline(xintercept = median(policies_temp$AdjMeanChamber, na.rm = TRUE), linetype = "dashed", color = "blue") + xlim(c(min(policies_temp$AdjMeanChamber, na.rm = TRUE), max(policies_temp$AdjMeanChamber, na.rm = TRUE))))
)}
}
for (i in 1:ncol(policies)) {
if (is.factor(policies[,i])) {
policies_temp <- policies %>% select(State, Year, AdjMeanChamber) %>% mutate(Variable = policies[,i]) %>% filter(Year >= 2005 & Year <= 2008)
policies_temp <- na.omit(policies_temp)
suppressWarnings(print(ggplot(policies_temp, aes(x=AdjMeanChamber, y=Variable, color=Year)) +
geom_jitter() + scale_color_gradient(low = "pink", high = "red")  + theme_bw() + labs(title = colnames(policies)[i]) + theme(
title = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
panel.grid.major.x = element_blank()) + geom_vline(xintercept = median(policies_temp$AdjMeanChamber, na.rm = TRUE), linetype = "dashed", color = "black") + xlim(c(min(policies_temp$AdjMeanChamber, na.rm = TRUE), max(policies_temp$AdjMeanChamber, na.rm = TRUE))))
)}
}
for (i in 1:ncol(policies_sig)) {
if (is.factor(policies_sig[,i])) {
policies_temp <- policies_sig %>% select(State, Year, AdjMeanChamber) %>% mutate(Variable = policies_sig[,i])
policies_temp <- na.omit(policies_temp)
suppressWarnings(print(ggplot(policies_temp, aes(x=AdjMeanChamber, y=Variable, color=Year)) +
geom_jitter() + scale_color_gradient(low = "gold", high = "darkgreen") + theme_bw() + labs(title = colnames(policies_sig)[i], subtitle = policy_descriptions[i]) + theme(
title = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
panel.grid.major.x = element_blank()) + geom_vline(xintercept = median(policies_temp$AdjMeanChamber, na.rm = TRUE), linetype = "dashed", color = "black") + xlim(c(min(policies_temp$AdjMeanChamber, na.rm = TRUE), max(policies_temp$AdjMeanChamber, na.rm = TRUE))))
)}
}
for (i in 1:ncol(policies_sig)) {
if (is.factor(policies_sig[,i])) {
policies_temp <- policies_sig %>% select(State, Year, AdjMeanChamber, CI, EI) %>% mutate(Variable = policies_sig[,i])
policies_temp <- na.omit(policies_temp)
print(ggplot(policies_temp, aes(x=Variable, y=CI, color=AdjMeanChamber)) +
geom_jitter() + scale_color_gradient(low = "gold", high = "darkgreen") + theme_bw() + labs(title = colnames(policies_sig)[i], subtitle = policy_descriptions[i]))
print(ggplot(policies_temp, aes(x=Variable, y=EI, color=AdjMeanChamber)) +
geom_jitter() + scale_color_gradient(low = "purple", high = "orange") + theme_bw() + labs(title = colnames(policies_sig)[i], subtitle = policy_descriptions[i]))
}
}
View(policies_sig)
View(multinom_sig)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
library(fastDummies)
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:24], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:24]-1
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted ==1)
install.packages("ConvergenceClubs")
library(ConvergenceClubs)
View(policies_onehot)
melt(policies)
policies_melted <- melt(policies, id=c("State"))
View(policies_melted)
View(policies_onehot)
policies_melted <- melt(policies_onehot, id=c("State", "Year"))
View(policies_melted)
policies_melted <- flatten(policies_onehot)
View(policies_melted)
data("filteredGDP")
force(filteredGDP)
View(filteredGDP)
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:24], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:24]-1
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted ==1)
str(policies_onehot)
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted ==1)
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
names(policies_omit)[3:24] <- paste0("FACTOR_", names(policies_omit)[3:24])
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:24], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:24]-1
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted == 1)
first_year_adopted <- long_policies %>%
group_by(State, policy) %>%
summarize(first_year = min(Year)) %>%
ungroup()
unique(policies_omit$State)
str(first_year_adopted)
first_year_adopted$State <- as.factor(first_year_adopted$State)
first_year_adopted$policy <- as.factor(first_year_adopted$policy)
colnames(first_year_adopted) <- c("State", "Policy", "Year")
joined_first_year <- left_join(first_year_adopted, panel %>% select(State, Year, AdjMeanChamber), by=c("State","Year"))
str(joined_first_year)
joined_first_year$State <- as.factor(joined_first_year$State)
View(joined_first_year)
joined_first_year$Year <- 2024-joined_first_year$Year
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
names(policies_omit)[3:24] <- paste0("FACTOR_", names(policies_omit)[3:24])
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:24], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:24]-1
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted == 1)
first_year_adopted <- long_policies %>%
group_by(State, policy) %>%
summarize(first_year = min(Year)) %>%
ungroup()
unique(policies_omit$State)
str(first_year_adopted)
first_year_adopted$State <- as.factor(first_year_adopted$State)
first_year_adopted$policy <- as.factor(first_year_adopted$policy)
colnames(first_year_adopted) <- c("State", "Policy", "Year")
joined_first_year <- left_join(first_year_adopted, panel %>% select(State, Year, AdjMeanChamber), by=c("State","Year"))
str(joined_first_year)
joined_first_year$State <- as.factor(joined_first_year$State)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber)) + geom_point()
)
}
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i]))
)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i]))
)
}
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i]))
)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i]))
)
}
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i])) + xlim(c(1998,2020))
)
unique(joined_first_year$State)
length(unique(joined_first_year$State))
colnames(policies_onehot)
policies_onehot$FACTOR_w4_electric_decoupling_21_1 == policies_onehot$FACTOR_w4_electric_decoupling_21
factor_cols
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
names(policies_omit)[3:24] <- paste0("FACTOR_", names(policies_omit)[3:24])
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
policies_onehot <- policies_onehot %>% select(-factor_cols)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:24], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:24]-1
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted == 1)
first_year_adopted <- long_policies %>%
group_by(State, policy) %>%
summarize(first_year = min(Year)) %>%
ungroup()
unique(policies_omit$State)
str(first_year_adopted)
first_year_adopted$State <- as.factor(first_year_adopted$State)
first_year_adopted$policy <- as.factor(first_year_adopted$policy)
colnames(first_year_adopted) <- c("State", "Policy", "Year")
joined_first_year <- left_join(first_year_adopted, panel %>% select(State, Year, AdjMeanChamber), by=c("State","Year"))
str(joined_first_year)
joined_first_year$State <- as.factor(joined_first_year$State)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i])) + xlim(c(1998,2020))
)
}
View(policies_onehot)
View(joined_first_year)
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i])) + xlim(c(1998,2020)) + ylim(c(-2,2))
)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i])) + xlim(c(1998,2020)) + ylim(c(-2,2))
)
}
colnames(policies_onehot)
policies_clustering <- policies_onehot %>% select(-AdjMeanChamber, -CI, -EI)
View(policies_clustering)
policies_clustering <- policies_onehot %>% select(-AdjMeanChamber, -CI, -EI, -z_gasoline_tax, -x_eers, x_rps_targets_bindingonly)
policies_clustering <- policies_onehot %>% select(-AdjMeanChamber, -CI, -EI, -z_gasoline_tax, -x_eers, -x_rps_targets_bindingonly)
policies_clustering <- policies_onehot %>% select(-Year,-State,-AdjMeanChamber, -CI, -EI, -z_gasoline_tax, -x_eers, -x_rps_targets_bindingonly)
View(policies_clustering)
str(policies_clustering)
View(policies_onehot)
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
names(policies_omit)[3:24] <- paste0("FACTOR_", names(policies_omit)[3:24])
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
policies_onehot <- policies_onehot %>% select(-factor_cols)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:24], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:24]
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted == 1)
first_year_adopted <- long_policies %>%
group_by(State, policy) %>%
summarize(first_year = min(Year)) %>%
ungroup()
unique(policies_omit$State)
str(first_year_adopted)
first_year_adopted$State <- as.factor(first_year_adopted$State)
first_year_adopted$policy <- as.factor(first_year_adopted$policy)
colnames(first_year_adopted) <- c("State", "Policy", "Year")
joined_first_year <- left_join(first_year_adopted, panel %>% select(State, Year, AdjMeanChamber), by=c("State","Year"))
str(joined_first_year)
joined_first_year$State <- as.factor(joined_first_year$State)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i])) + xlim(c(1998,2020)) + ylim(c(-2,2))
)
}
View(policies_onehot)
library(fastDummies)
policies_omit <- policies
policies_omit[is.na(policies_omit)] <- 0
policies_omit <- policies_omit %>% filter(State != 0) %>% filter(State != "DC")
policies_omit[3:24] <- lapply(policies_omit[3:24], as.factor)
names(policies_omit)[3:24] <- paste0("FACTOR_", names(policies_omit)[3:24])
cols_to_encode <- sapply(policies_omit, function(x) is.factor(x) && length(unique(x)) > 2)
factor_cols <- names(policies_omit)[cols_to_encode]
policies_onehot <- dummy_cols(policies_omit, select_columns = factor_cols, remove_first_dummy = TRUE)
policies_onehot <- policies_onehot %>% select(-factor_cols)
str(policies_onehot)
policies_onehot[3:24] <- lapply(policies_onehot[3:13], as.numeric)
policies_onehot[3:24] <- policies_onehot[3:13]-1
long_policies <- policies_onehot %>%
pivot_longer(
cols = starts_with("FACTOR"),
names_to = "policy",
values_to = "adopted"
) %>%
filter(adopted == 1)
first_year_adopted <- long_policies %>%
group_by(State, policy) %>%
summarize(first_year = min(Year)) %>%
ungroup()
unique(policies_omit$State)
str(first_year_adopted)
first_year_adopted$State <- as.factor(first_year_adopted$State)
first_year_adopted$policy <- as.factor(first_year_adopted$policy)
colnames(first_year_adopted) <- c("State", "Policy", "Year")
joined_first_year <- left_join(first_year_adopted, panel %>% select(State, Year, AdjMeanChamber), by=c("State","Year"))
str(joined_first_year)
joined_first_year$State <- as.factor(joined_first_year$State)
for (i in 1:length(unique(joined_first_year$Policy))) {
print(
ggplot(data=joined_first_year%>%filter(Policy==unique(joined_first_year$Policy)[i]),
aes(x=Year, y=AdjMeanChamber,color=State)) + geom_point() + theme_bw() + labs(title = as.character(unique(joined_first_year$Policy)[i])) + xlim(c(1998,2020)) + ylim(c(-2,2))
)
}
policies_clustering <- policies_onehot %>% select(-Year,-State,-AdjMeanChamber, -CI, -EI, -z_gasoline_tax, -x_eers, -x_rps_targets_bindingonly)
for (i in 1:ncol(policies_clustering)) {
policies_clustering[,i] <- as.factor(policies_clustering[,i])
}
dist_matrix <- dist(policies_clustering, method = "euclidean")
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Plot the dendrogram to visualize clusters
plot(hc, main = "Hierarchical Clustering of States based on Policy Regimes",
xlab = "", sub = "", cex = 0.9)
# Cutting the tree at a certain height to define clusters
# You can choose a different number for 'k' based on your analysis
num_clusters <- 10
clusters <- cutree(hc, k = num_clusters)
# Adding cluster information back to the original data
policies_clustering$cluster <- as.factor(clusters)
policies_clustering <- policies_onehot %>% select(-AdjMeanChamber, -CI, -EI, -z_gasoline_tax, -x_eers, -x_rps_targets_bindingonly)
for (i in 1:ncol(policies_clustering)) {
policies_clustering[,i] <- as.factor(policies_clustering[,i])
}
dist_matrix <- dist(policies_clustering, method = "euclidean")
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
dist_matrix <- dist(policies_clustering, method = "euclidean")
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Plot the dendrogram to visualize clusters
plot(hc, main = "Hierarchical Clustering of States based on Policy Regimes",
xlab = "", sub = "", cex = 0.9)
# Cutting the tree at a certain height to define clusters
# You can choose a different number for 'k' based on your analysis
num_clusters <- 10
clusters <- cutree(hc, k = num_clusters)
# Adding cluster information back to the original data
policies_clustering$cluster <- as.factor(clusters)
# Analyzing the clusters
table(policies_clustering$State, policies_clustering$cluster)
# If you want to visualize the clusters in terms of two principal components
pca <- prcomp(policy_data)
# If you want to visualize the clusters in terms of two principal components
pca <- prcomp(policies_clustering)
# If you want to visualize the clusters in terms of two principal components
pca <- prcomp(policies_clustering)
# If you want to visualize the clusters in terms of two principal components
pca <- prcomp(policies_clustering$cluster)
colnames(policies_onehot)
policies_clustering <- policies_onehot %>% select(-AdjMeanChamber, -CI, -EI, -z_gasoline_tax, -x_eers, -x_rps_targets_bindingonly)
for (i in 1:ncol(policies_clustering)) {
policies_clustering[,i] <- as.factor(policies_clustering[,i])
}
dist_matrix <- dist(policies_clustering, method = "euclidean")
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Plot the dendrogram to visualize clusters
plot(hc, main = "Hierarchical Clustering of States based on Policy Regimes",
xlab = "", sub = "", cex = 0.9)
# Cutting the tree at a certain height to define clusters
# You can choose a different number for 'k' based on your analysis
num_clusters <- 10
clusters <- cutree(hc, k = num_clusters)
# Adding cluster information back to the original data
policies_clustering$cluster <- as.factor(clusters)
# Analyzing the clusters
table(policies_clustering$State, policies_clustering$cluster)
# Analyzing the clusters
table(policies_clustering$State, policies_clustering$cluster)
joined_clustering <- left_join(policies_clustering, panel %>% select(AvgChamberIdeology), by=c("State","Year"))
joined_clustering <- left_join(policies_clustering, panel %>% select(AdjMeanChamber), by=c("State","Year"))
View(policies_clustering)
joined_clustering <- left_join(policies_clustering, panel %>% select(State,Year,AdjMeanChamber), by=c("State","Year"))
joined_clustering <- left_join(policies_clustering, panel %>% select(as.factor(State),as.factor(Year),AdjMeanChamber), by=c("State","Year"))
joined_clustering <- left_join(policies_clustering, panel %>% select(as.factor(panel$State),as.factor(panel$Year),AdjMeanChamber), by=c("State","Year"))
View(panel)
policies_clustering$State <- as.character(policies_clustering$State)
joined_clustering <- left_join(policies_clustering, panel %>% select(State,Year,AvgChamberIdeology), by=c("State","Year"))
joined_clustering <- left_join(policies_clustering, panel %>% select(State,Year,AdjMeanChamber), by=c("State","Year"))
policies_clustering$Year <- as.numeric(policies_clustering$Year)
View(policies_clustering)
