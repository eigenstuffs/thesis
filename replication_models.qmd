---
title: "replication_models"
author: "Branden Bohrnsen"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r}
options(scipen=999)

library(reshape2)
library(ggpubr)
library(sandwich)
library(broom)
library(lmtest)
library(tidyverse)
library(dplyr)

set.seed(07151129)
theme_set(theme_pubr())

```

```{r}
panel <- read.csv("panel_with_counts.csv")

panel <- panel %>%
  mutate(
    log_EmissionsPerCapita = log(EmissionsPerCapita),
    log_CarbonIntensity = log(CarbonIntensity),
    log_EnergyIntensity = log(EnergyIntensity),
    log_GDPPerCapita = log(GDPPerCapita),
    factor_State = as.factor(State),
    factor_Year = as.factor(Year),
    factor_Region = as.factor(Region),
    factor_UnifiedRep = as.factor(case_when(
      SenateMajority == 1 & HouseMajority == 1 ~ 1,
      is.na(SenateMajority) | is.na(HouseMajority) ~ NA,
      TRUE ~ 0
    )),
    factor_UnifiedRepLag1 = as.factor(case_when(
      SenateMajorityLag1 == 1 & HouseMajorityLag1 == 1 ~ 1,
      is.na(SenateMajorityLag1) | is.na(HouseMajorityLag1) ~ NA,
      TRUE ~ 0
    )),
    factor_UnifiedRepLag2 = as.factor(case_when(
      SenateMajorityLag2 == 1 & HouseMajorityLag2 == 1 ~ 1,
      is.na(SenateMajorityLag2) | is.na(HouseMajorityLag2) ~ NA,
      TRUE ~ 0
    ))
  )
```

**Fixed Effects Models**

```{r}
ideology_vars <- c("Ideology", "IdeologyLag1", "IdeologyLag2"
)
polarization_vars <- c("Polarization", "PolarizationLag1", "PolarizationLag2")

all_vars <- Map(c, ideology_vars, polarization_vars)

dependent_vars <- list(
  m0 = "log_EmissionsPerCapita",
  m1 = "log_CarbonIntensity",
  m2 = "log_EnergyIntensity",
  m3 = "RPS",
  m4 = "EERS",
  m5 = "GasTax"
)

outcome_formulas <- list()

for (dv in dependent_vars) {
  for (iv_pair in all_vars) {
    iv_formula <- paste(iv_pair, collapse = " + ")
    formula <- as.formula(paste(dv, "~", iv_formula, "+ log_GDPPerCapita + factor_State + factor_Year"))
    outcome_formulas[[length(outcome_formulas) + 1]] <- formula
  }
}

fit_and_cluster <- function(formula, use_data) {
  model <- lm(formula = formula, data = use_data)
  print("modeled")
  clustered_se <- vcovCL(model, type = "HC1", cluster = use_data$factor_Region)
  print("clustered")
  return(list(model = model, clustered_se = clustered_se, formula = formula, data = use_data))
}

models <- lapply(outcome_formulas, fit_and_cluster, use_data = panel)

threshold <- 2 / sqrt(nrow(panel))
filtered_data <- lapply(models, function(model_list) {
  model <- model_list$model
  formula <- model_list$formula
  dv <- deparse(formula[[2]])
  iv <- all.vars(formula[[3]])[1]
  dfbetas_values <- dfbetas(model)[, iv]
  influential <- abs(dfbetas_values) > threshold
  trimmed_data <- model.frame(model)[!influential, ]
  list(data = trimmed_data, formula = formula, dv = dv, iv = iv)
})

trimmed_models <- lapply(filtered_data, function(info) {
  data <- info$data
  formula <- info$formula
  fit_and_cluster(formula, use_data = data)
})

extract_results <- function(model_list, trimmed, dataset) {
  model <- model_list$model
  clustered_se <- model_list$clustered_se
  formula <- model_list$formula
  data_used <- dataset
  tidy(coeftest(model, vcov = clustered_se)) %>%
    filter(term %in% c(ideology_vars, polarization_vars)) %>%
    mutate(
      Trimmed = trimmed,
      Observations = nrow(data_used),
      DV = deparse(formula[[2]]),
      Model_Formula = paste(deparse(formula), collapse = " "),
      Data_Used = paste(dim(dataset), collapse = " x ")
    )
}

results_initial <- bind_rows(lapply(models, function(m) {
  extract_results(m, trimmed = FALSE, dataset = panel)
}))

results_trimmed <- bind_rows(Map(function(m, i) {
  extract_results(m, trimmed = TRUE, dataset = filtered_data[[i]]$data)
}, trimmed_models, seq_along(trimmed_models)))

final_results_outcomes <- bind_rows(results_initial, results_trimmed) %>%
  dplyr::select(DV, Trimmed, Observations, term, estimate, std.error, statistic, p.value, Model_Formula, Data_Used)

write.csv(final_results_outcomes, "exports/final_results_outcomes.csv")
```

**Fixed Effects Policy Scores**

```{r}
dependent_vars <- list(
  m0 = "Score",
  m1 = "CI_Score",
  m2 = "EE_Score"
)

ideology_vars <- c("Ideology", "IdeologyLag1", "IdeologyLag2")
polarization_vars <- c("Polarization", "PolarizationLag1", "PolarizationLag2")

all_vars <- Map(c, ideology_vars, polarization_vars)

policy_formulas <- list()

for (dv in dependent_vars) {
  for (iv_pair in all_vars) {
    iv_formula <- paste(iv_pair, collapse = " + ")
    formula <- as.formula(paste(dv, "~", iv_formula, "+ log_GDPPerCapita + factor_State + factor_Year"))
    policy_formulas[[length(policy_formulas) + 1]] <- formula
  }
}

fit_and_cluster <- function(formula, use_data) {
  model <- glm(formula = formula, data = use_data, family = "poisson")
  print("modeled")
  
  clustered_se <- vcovCL(model, type = "HC0", cluster = use_data$factor_Region)
  print("clustered")
  return(list(model = model, clustered_se = clustered_se, formula = formula, data = use_data))
}

models <- lapply(policy_formulas, fit_and_cluster, use_data = panel)

threshold <- 2 / sqrt(nrow(panel))

filtered_data <- lapply(models, function(model_list) {
  model <- model_list$model
  formula <- model_list$formula
  dv <- deparse(formula[[2]])
  iv <- all.vars(formula[[3]])[1]
  dfbetas_values <- dfbetas(model)[, iv]
  influential <- abs(dfbetas_values) > threshold
  trimmed_data <- model.frame(model)[!influential, ]
  list(data = trimmed_data, formula = formula, dv = dv, iv = iv)
})

trimmed_models <- lapply(filtered_data, function(info) {
  data <- info$data
  formula <- info$formula
  fit_and_cluster(formula, use_data = data)
})

extract_results <- function(model_list, trimmed, dataset) {
  model <- model_list$model
  clustered_se <- model_list$clustered_se
  formula <- model_list$formula
  data_used <- dataset
  tidy(coeftest(model, vcov = clustered_se)) %>%
    filter(term %in% c(ideology_vars, polarization_vars)) %>%
    mutate(
      Trimmed = trimmed,
      Observations = nrow(data_used),
      DV = deparse(formula[[2]]),
      Model_Formula = paste(deparse(formula), collapse = " "),
      Data_Used = paste(dim(dataset), collapse = " x ")
    )
}

results_initial <- bind_rows(lapply(models, function(m) {
  extract_results(m, trimmed = FALSE, dataset = panel)
}))

results_trimmed <- bind_rows(Map(function(m, i) {
  extract_results(m, trimmed = TRUE, dataset = filtered_data[[i]]$data)
}, trimmed_models, seq_along(trimmed_models)))

final_results_policy <- bind_rows(results_initial, results_trimmed) %>%
  dplyr::select(DV, Trimmed, Observations, term, estimate, std.error, statistic, p.value, Model_Formula, Data_Used)
```

```{r}
write.csv(final_results_outcomes, "exports/final_results_outcomes.csv")
write.csv(final_results_policy, "exports/final_results_policy.csv")
```

## Measures of Dem and Rep Medians

```{r}
ideology_vars <- c("Dems", "DemsLag1", "DemsLag2")
polarization_vars <- c("Reps", "RepsLag1", "RepsLag2")

all_vars <- Map(c, ideology_vars, polarization_vars)

dependent_vars <- list(
  m0 = "log_EmissionsPerCapita",
  m1 = "log_CarbonIntensity",
  m2 = "log_EnergyIntensity",
  m3 = "RPS",
  m4 = "EERS",
  m5 = "GasTax"
)

outcome_formulas <- list()

for (dv in dependent_vars) {
  for (iv_pair in all_vars) {
    iv_formula <- paste(iv_pair, collapse = " + ")
    formula <- as.formula(paste(dv, "~", iv_formula, "+ factor_UnifiedRep + log_GDPPerCapita + factor_State + factor_Year"))
    outcome_formulas[[length(outcome_formulas) + 1]] <- formula
  }
}

fit_and_cluster <- function(formula, use_data) {
  model <- lm(formula = formula, data = use_data)
  print("modeled")
  clustered_se <- vcovCL(model, type = "HC1", cluster = use_data$factor_Region)
  print("clustered")
  return(list(model = model, clustered_se = clustered_se, formula = formula, data = use_data))
}

models <- lapply(outcome_formulas, fit_and_cluster, use_data = panel)

threshold <- 2 / sqrt(nrow(panel))
filtered_data <- lapply(models, function(model_list) {
  model <- model_list$model
  formula <- model_list$formula
  dv <- deparse(formula[[2]])
  iv <- all.vars(formula[[3]])[1]
  dfbetas_values <- dfbetas(model)[, iv]
  influential <- abs(dfbetas_values) > threshold
  trimmed_data <- model.frame(model)[!influential, ]
  list(data = trimmed_data, formula = formula, dv = dv, iv = iv)
})

trimmed_models <- lapply(filtered_data, function(info) {
  data <- info$data
  formula <- info$formula
  fit_and_cluster(formula, use_data = data)
})

extract_results <- function(model_list, trimmed, dataset) {
  model <- model_list$model
  clustered_se <- model_list$clustered_se
  formula <- model_list$formula
  data_used <- dataset
  tidy(coeftest(model, vcov = clustered_se)) %>%
    filter(term %in% c(ideology_vars, polarization_vars, "factor_UnifiedRep1")) %>%
    mutate(
      Trimmed = trimmed,
      Observations = nrow(data_used),
      DV = deparse(formula[[2]]),
      Model_Formula = paste(deparse(formula), collapse = " "),
      Data_Used = paste(dim(dataset), collapse = " x ")
    )
}

results_initial <- bind_rows(lapply(models, function(m) {
  extract_results(m, trimmed = FALSE, dataset = panel)
}))

results_trimmed <- bind_rows(Map(function(m, i) {
  extract_results(m, trimmed = TRUE, dataset = filtered_data[[i]]$data)
}, trimmed_models, seq_along(trimmed_models)))

final_results_outcomes <- bind_rows(results_initial, results_trimmed) %>%
  dplyr::select(DV, Trimmed, Observations, term, estimate, std.error, statistic, p.value, Model_Formula, Data_Used)

write.csv(final_results_outcomes, "exports/final_results_outcomes.csv")
```

**Fixed Effects Policy Scores**

```{r}
dependent_vars <- list(
  m0 = "Score",
  m1 = "CI_Score",
  m2 = "EE_Score"
)

ideology_vars <- c("Dems", "DemsLag1", "DemsLag2")
polarization_vars <- c("Reps", "RepsLag1", "RepsLag2")

all_vars <- Map(c, ideology_vars, polarization_vars)

policy_formulas <- list()

for (dv in dependent_vars) {
  for (iv_pair in all_vars) {
    iv_formula <- paste(iv_pair, collapse = " + ")
    formula <- as.formula(paste(dv, "~", iv_formula, "+ factor_UnifiedRep + log_GDPPerCapita + factor_State + factor_Year"))
    policy_formulas[[length(policy_formulas) + 1]] <- formula
  }
}

fit_and_cluster <- function(formula, use_data) {
  model <- glm(formula = formula, data = use_data, family = "poisson")
  print("modeled")
  
  clustered_se <- vcovCL(model, type = "HC0", cluster = use_data$factor_Region)
  print("clustered")
  return(list(model = model, clustered_se = clustered_se, formula = formula, data = use_data))
}

models <- lapply(policy_formulas, fit_and_cluster, use_data = panel)

threshold <- 2 / sqrt(nrow(panel))

filtered_data <- lapply(models, function(model_list) {
  model <- model_list$model
  formula <- model_list$formula
  dv <- deparse(formula[[2]])
  iv <- all.vars(formula[[3]])[1]
  dfbetas_values <- dfbetas(model)[, iv]
  influential <- abs(dfbetas_values) > threshold
  trimmed_data <- model.frame(model)[!influential, ]
  list(data = trimmed_data, formula = formula, dv = dv, iv = iv)
})

trimmed_models <- lapply(filtered_data, function(info) {
  data <- info$data
  formula <- info$formula
  fit_and_cluster(formula, use_data = data)
})

extract_results <- function(model_list, trimmed, dataset) {
  model <- model_list$model
  clustered_se <- model_list$clustered_se
  formula <- model_list$formula
  data_used <- dataset
  tidy(coeftest(model, vcov = clustered_se)) %>%
    filter(term %in% c(ideology_vars, polarization_vars, "factor_UnifiedRep1")) %>%
    mutate(
      Trimmed = trimmed,
      Observations = nrow(data_used),
      DV = deparse(formula[[2]]),
      Model_Formula = paste(deparse(formula), collapse = " "),
      Data_Used = paste(dim(dataset), collapse = " x ")
    )
}

results_initial <- bind_rows(lapply(models, function(m) {
  extract_results(m, trimmed = FALSE, dataset = panel)
}))

results_trimmed <- bind_rows(Map(function(m, i) {
  extract_results(m, trimmed = TRUE, dataset = filtered_data[[i]]$data)
}, trimmed_models, seq_along(trimmed_models)))

final_results_policy <- bind_rows(results_initial, results_trimmed) %>%
  dplyr::select(DV, Trimmed, Observations, term, estimate, std.error, statistic, p.value, Model_Formula, Data_Used)
```