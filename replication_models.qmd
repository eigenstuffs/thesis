---
title: "replication_models"
author: "Branden Bohrnsen"
format: html
editor: visual
---

```{r}
options(scipen=999)
library(tidyverse)
library(patchwork)
library(jtools)
library(stringr)
library(car)
library(ggpubr)
library(fixest)
library(lmtest)
library(xtable)
library(sandwich)
library(multiwayvcov)

set.seed(07151129)
theme_set(theme_pubr())
```

```{r}
panel <- read.csv("panel_with_count_FEB20.csv")
permutation_coefficients <- data.frame(Emissions = rep(NA, 1000),
                                       CarbonIntensity = rep(NA, 1000),
                                       EnergyIntensity = rep(NA, 1000),
                                       PolicyScore = rep(NA, 1000),
                                       CIScore = rep(NA, 1000),
                                       EIScore = rep(NA, 1000))
```

**Fixed Effects Models**

```{r}
m1 <- feols(
  data = panel,
  fml = log(CarbonIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

m2 <- feols(
  data = panel,
  fml = log(EnergyIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

residuals_m1 <- resid(m1)

residual_threshold_m1 <- mean(residuals_m1) + 2*sd(residuals_m1)
observations_to_exclude_m1 <- which(abs(residuals_m1) > residual_threshold_m1)

data_reduced_m1 <- panel[-observations_to_exclude_m1, ]

residuals_m2 <- resid(m2)

residual_threshold_m2 <- mean(residuals_m2) + 2*sd(residuals_m2)
observations_to_exclude_m2 <- which(abs(residuals_m2) > residual_threshold_m2)

data_reduced_m2 <- panel[-observations_to_exclude_m2, ]

m1_no_outliers <- feols(
  data = data_reduced_m1,
  fml = log(CarbonIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

m2_no_outliers <- feols(
  data = data_reduced_m2,
  fml = log(EnergyIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

m1
m2
m1_no_outliers
m2_no_outliers
```

**Multiple Linear Regression Models**

```{r}
m3 <- feols(
  data = panel,
  fml = log(CarbonIntensity) ~ Ideology + log(GDPPerCapita) + log(Population) +
    Weighted_GHI + Weighted_Speed120m + PercentUrban + PropManuEmployment + 
    PropFarmEmployment,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

m4 <- feols(
  data = panel,
  fml = log(EnergyIntensity) ~ Ideology + log(GDPPerCapita) + log(Population) +
    Weighted_GHI + Weighted_Speed120m + PercentUrban + PropManuEmployment + 
    PropFarmEmployment,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

residuals_m3 <- resid(m3)

residual_threshold_m3 <- mean(residuals_m3) + 2*sd(residuals_m3)
observations_to_exclude_m3 <- which(abs(residuals_m3) > residual_threshold_m3)

data_reduced_m3 <- panel[-observations_to_exclude_m3, ]

residuals_m4 <- resid(m4)

residual_threshold_m4 <- mean(residuals_m4) + 2*sd(residuals_m4)
observations_to_exclude_m4 <- which(abs(residuals_m4) > residual_threshold_m4)

data_reduced_m4 <- panel[-observations_to_exclude_m4, ]

m3_no_outliers <- feols(
  data = data_reduced_m3,
  fml = log(CarbonIntensity) ~ Ideology + log(GDPPerCapita) + log(Population) +
    Weighted_GHI + Weighted_Speed120m + PercentUrban + PropManuEmployment + 
    PropFarmEmployment,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

m4_no_outliers <- feols(
  data = data_reduced_m4,
  fml = log(EnergyIntensity) ~ Ideology + log(GDPPerCapita) + log(Population) +
    Weighted_GHI + Weighted_Speed120m + PercentUrban + PropManuEmployment + 
    PropFarmEmployment,
  panel.id = ~ State + Year,
  vcov = "driscoll_kraay"
)

m3
m4
m3_no_outliers
m4_no_outliers
```

**Permutation Inference - Emissions**

```{r}
baseline_emissions <- feols(
    data = panel,
    fml = log(EmissionsPerCapita) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )

coef_emissions <- coef(baseline_emissions)["Ideology"]

for(i in 1:1000) {
  shuffled_data <- panel %>%
    group_by(State) %>%
    mutate(
      order = row_number(),
      shift = sample(1:n(), 1),
      Ideology = Ideology[(order - shift) %% n() + 1]
    ) %>%
    ungroup()
  
  model <- feols(
    data = shuffled_data,
    fml = log(EmissionsPerCapita) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )
  
  permutation_coefficients$Emissions[i] <- coef(model)["Ideology"]
}
```

**Permutation Inference -- Carbon Intensity**

```{r}
baseline_carbon <- feols(
    data = panel,
    fml = log(CarbonIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )

coef_carbon <- coef(baseline_carbon)["Ideology"]

for(i in 1:1000) {
  shuffled_data <- panel %>%
    group_by(State) %>%
    mutate(
      order = row_number(),
      shift = sample(1:n(), 1),
      Ideology = Ideology[(order - shift) %% n() + 1]
    ) %>%
    ungroup()
  
  model <- feols(
    data = shuffled_data,
    fml = log(CarbonIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )
  
  permutation_coefficients$CarbonIntensity[i] <- coef(model)["Ideology"]
}
```

**Permutation Inference -- Energy Intensity**

```{r}
baseline_energy <- feols(
    data = panel,
    fml = log(EnergyIntensity) ~ Ideology + log(Population) + log(GDPPerCapita)| State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )

coef_energy <- coef(baseline_energy)["Ideology"]

for(i in 1:1000) {
  shuffled_data <- panel %>%
    group_by(State) %>%
    mutate(
      order = row_number(),
      shift = sample(1:n(), 1),
      Ideology = Ideology[(order - shift) %% n() + 1]
    ) %>%
    ungroup()
  
  model <- feols(
    data = shuffled_data,
    fml = log(EnergyIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )
  
  permutation_coefficients$EnergyIntensity[i] <- coef(model)["Ideology"]
}
```

**Permutation Inference -- All Policies**

```{r}
baseline_policies <- feols(
    data = panel,
    fml = Score ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )

coef_policies <- coef(baseline_policies)["Ideology"]

for(i in 1:1000) {
  shuffled_data <- panel %>%
    group_by(State) %>%
    mutate(
      order = row_number(),
      shift = sample(1:n(), 1),
      Ideology = Ideology[(order - shift) %% n() + 1]
    ) %>%
    ungroup()
  
  model <- feols(
    data = shuffled_data,
    fml = Score ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )
  
  permutation_coefficients$PolicyScore[i] <- coef(model)["Ideology"]
}
```

**Permutation Inference -- Carbon Efficiency Policy**

```{r}
baseline_carbon_policy <- feols(
    data = panel,
    fml = CI_Score ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )

coef_carbon_policy <- coef(baseline_carbon_policy)["Ideology"]

for(i in 1:1000) {
  shuffled_data <- panel %>%
    group_by(State) %>%
    mutate(
      order = row_number(),
      shift = sample(1:n(), 1),
      Ideology = Ideology[(order - shift) %% n() + 1]
    ) %>%
    ungroup()
  
  model <- feols(
    data = shuffled_data,
    fml = CI_Score ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )
  
  permutation_coefficients$CIScore[i] <- coef(model)["Ideology"]
}
```

**Permutation Inference -- Energy Efficiency Policy**

```{r}
baseline_energy_policy <- feols(
    data = panel,
    fml = EE_Score ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )

coef_energy_policy <- coef(baseline_energy_policy)["Ideology"]

for(i in 1:1000) {
  shuffled_data <- panel %>%
    group_by(State) %>%
    mutate(
      order = row_number(),
      shift = sample(1:n(), 1),
      Ideology = Ideology[(order - shift) %% n() + 1]
    ) %>%
    ungroup()
  
  model <- feols(
    data = shuffled_data,
    fml = EE_Score ~ Ideology + log(Population) + log(GDPPerCapita) | State + Year,
    panel.id = ~ State + Year,
    vcov = "driscoll_kraay"
  )
  
  permutation_coefficients$EIScore[i] <- coef(model)["Ideology"]
}
```

**Permutation Inference Visualizations**

```{r}
permutation_coefficients$Emissions_Bool <- ifelse(
  permutation_coefficients$Emissions >= coef_emissions,
  TRUE, FALSE
)

permutation_coefficients$CarbonIntensity_Bool <- ifelse(
  permutation_coefficients$CarbonIntensity >= coef_carbon,
  TRUE, FALSE
)

permutation_coefficients$EnergyIntensity_Bool <- ifelse(
  permutation_coefficients$EnergyIntensity >= coef_energy,
  TRUE, FALSE
)

permutation_coefficients$PolicyScore_Bool <- ifelse(
  permutation_coefficients$PolicyScore >= coef_policies,
  TRUE, FALSE
)

permutation_coefficients$CIScore_Bool <- ifelse(
  permutation_coefficients$CIScore >= coef_carbon_policy,
  TRUE, FALSE
)

permutation_coefficients$EIScore_Bool <- ifelse(
  permutation_coefficients$EIScore >= coef_energy_policy,
  TRUE, FALSE
)

emissions_p <- mean(abs(permutation_coefficients$Emissions) >= abs(coef_emissions))
carbon_p <- mean(abs(permutation_coefficients$CarbonIntensity) >= abs(coef_carbon))
energy_p <- mean(abs(permutation_coefficients$EnergyIntensity) >= abs(coef_energy))
score_p <- mean(abs(permutation_coefficients$PolicyScore) >= abs(coef_policies))
carbon_score_p <- mean(abs(permutation_coefficients$CIScore) >= abs(coef_carbon_policy))
energy_score_p <- mean(abs(permutation_coefficients$EIScore) >= abs(coef_energy_policy))

hist0 <- gghistogram(permutation_coefficients, x = "Emissions", fill = "Emissions_Bool", color = "NA", bins = 20) +  geom_vline(aes(xintercept = coef_emissions), linetype = "dashed") + labs(title = "Per Capita Emissions", x = "", y = "", subtitle = paste("p =", emissions_p), 'fill' = "Above baseline?") + theme_replace(axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) + scale_x_continuous(breaks = seq(from = -.04, to = .04, by = .02))

hist1 <- gghistogram(permutation_coefficients, x = "CarbonIntensity", fill = "CarbonIntensity_Bool", color = "NA", bins = 20) +  geom_vline(aes(xintercept = coef_carbon), linetype = "dashed") + labs(title = "Carbon Intensity", x = "", y = "", subtitle = paste("p =", carbon_p), 'fill' = "Above baseline?") + theme_replace(axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) + scale_x_continuous(breaks = seq(from = -.02, to = .02, by = .02))

hist2 <- gghistogram(permutation_coefficients, x = "EnergyIntensity", fill = "EnergyIntensity_Bool", color = "NA", bins = 20) + geom_vline(aes(xintercept = coef_energy), linetype = "dashed") + labs(title = "Energy Intensity", x = "", y = "", subtitle = paste("p =", energy_p), 'fill' = "Above baseline?") + theme_replace(axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) + scale_x_continuous(breaks = seq(from = -.02, to = .02, by = .02))

hist3 <- gghistogram(permutation_coefficients, x = "PolicyScore", fill = "PolicyScore_Bool", color = "NA", bins = 20) + geom_vline(aes(xintercept = coef_policies), linetype = "dashed") + labs(title = "Climate Policy", x = "", y = "", subtitle = paste("p =", score_p), 'fill' = "Above baseline?") + theme_replace(axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) + scale_x_continuous(breaks = seq(from = -4, to = 1, by = 1))

hist4 <- gghistogram(permutation_coefficients, x = "CIScore", fill = "CIScore_Bool", color = "NA", bins = 20, label.y = F) + geom_vline(aes(xintercept = coef_carbon_policy), linetype = "dashed") + labs(title = "Carbon Policy", x = "", y = "", subtitle = paste("p =", carbon_score_p), 'fill' = "Above baseline?") + theme_replace(axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) + scale_x_continuous(breaks = seq(from = -2.5, to = 1.5, by = .5))

hist5 <- gghistogram(permutation_coefficients, x = "EIScore", fill = "EIScore_Bool", color = "NA", bins = 20) + geom_vline(aes(xintercept = coef_energy_policy), linetype = "dashed") + labs(title = "Energy Policy", x = "", y = "", subtitle = paste("p =", energy_score_p), 'fill' = "Above baseline?") + theme_replace(axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) + scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = .5))

multi.page <- ggarrange(ggarrange(hist0, legend = FALSE, ncol = 1),
          ggarrange(hist1, hist2, legend = FALSE, ncol = 2), nrow = 2, common.legend = TRUE)

multi.page.2 <- ggarrange(ggarrange(hist3, legend = FALSE, ncol = 1),
          ggarrange(hist4, hist5, legend = FALSE, ncol = 2), nrow = 2, common.legend = TRUE)

ggexport(multi.page, filename = "multi.page.pdf")
ggexport(multi.page.2, filename = "multi.page.2.pdf")
```

```{r}
etable(m1, m1_no_outliers, tex = TRUE)
etable(m2, m2_no_outliers, tex = TRUE)
etable(m3, m3_no_outliers, tex = TRUE)
etable(m4, m4_no_outliers, tex = TRUE)

etable(m1, m1_no_outliers, vcov = "iid", tex = TRUE)
etable(m2, m2_no_outliers, vcov = "iid", tex = TRUE)
etable(m3, m3_no_outliers, vcov = "iid", tex = TRUE)
etable(m4, m4_no_outliers, vcov = "iid", tex = TRUE)
```

**BP Tests**

```{r}
bptest(lm(log(EmissionsPerCapita) ~ Ideology + log(Population) + log(GDPPerCapita) + factor(State) + factor(Year), data = panel))

bptest(lm(log(CarbonIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) + factor(State) + factor(Year), data = panel))

bptest(lm(log(EnergyIntensity) ~ Ideology + log(Population) + log(GDPPerCapita) + factor(State) + factor(Year), data = panel))

bptest(lm(Score ~ Ideology + factor(State) + factor(Year), data = panel))

bptest(lm(CI_Score ~ Ideology + factor(State) + factor(Year), data = panel))

bptest(lm(EE_Score ~ Ideology + factor(State) + factor(Year), data = panel))
```

**Wald Tests**

```{r}
wald_tests <- data.frame(rbind(wald(m1, print = FALSE, keep = "Ideology"),
                     wald(m1_no_outliers, print = FALSE, keep = "Ideology"),
                     wald(m2, print = FALSE, keep = "Ideology"),
                     wald(m2_no_outliers, print = FALSE, keep = "Ideology"),
                     wald(m3, keep = "Ideology", print = FALSE),
                     wald(m4, keep = "Ideology", print = FALSE),
                     wald(m3_no_outliers, keep = "Ideology", print = FALSE),
                     wald(m4_no_outliers, keep = "Ideology", print = FALSE)))

wald_tests <- data.frame(lapply(wald_tests, function(x) sapply(x, function(y) unlist(y)[1])))

walds <- c("FE log(CarbonIntensity)", "no outliers", "FE log(EnergyIntensity)", "no outliers", "MLR log(CarbonIntensity)", "no outliers",
           "MLR log(EnergyIntensity)", "no outliers")

wald_tests <- cbind(walds, wald_tests)

view(wald_tests)

xtable(wald_tests, label = NULL)

wald_tests_iid <- data.frame(rbind(wald(m1, print = FALSE, vcov = "iid"),
                     wald(m1_no_outliers, print = FALSE, vcov = "iid"),
                     wald(m2, print = FALSE, vcov = "iid"),
                     wald(m2_no_outliers, print = FALSE, vcov = "iid"),
                     wald(m3, keep = "Ideology", print = FALSE, vcov = "iid"),
                     wald(m4, keep = "Ideology", print = FALSE, vcov = "iid"),
                     wald(m3_no_outliers, keep = "Ideology", print = FALSE, vcov = "iid"),
                     wald(m4_no_outliers, keep = "Ideology", print = FALSE, vcov = "iid")))

wald_tests_iid <- data.frame(lapply(wald_tests_iid, function(x) sapply(x, function(y) unlist(y)[1])))


wald_tests_iid <- cbind(walds, wald_tests_iid)

xtable(wald_tests_iid, label = NULL)

view(wald_tests_iid)
```

**Data Visualizations**

```{r}
plot_data <- panel %>% group_by(Year) %>%
  summarise(AvgIdeology = mean(Ideology, na.rm = TRUE),
            AvgEmissionsPerCapita = mean(EmissionsPerCapita, na.rm = TRUE),
            AvgBindingRPS = mean(x_rps_targets_bindingonly, na.rm = TRUE),
            AvgGasolineTax = mean(z_gasoline_tax, na.rm = TRUE),
            AvgEfficiencyProcurement = mean(x_eers, na.rm = TRUE),
            AvgPolicy = mean(Score, na.rm = TRUE),
            AvgCarbonScore = mean(CI_Score, na.rm = TRUE),
            AvgEnergyScore = mean(EE_Score, na.rm = TRUE),
            AvgCarbonIntensity = mean(CarbonIntensity, na.rm = TRUE),
            AvgEnergyIntensity = mean(EnergyIntensity, na.rm = TRUE),
            AvgGDPPerCapita = mean(GDPPerCapita, na.rm = TRUE)
  )

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgIdeology)) + labs(title = "Average State Legislature Ideology 1998-2020", x = "Year", y = "Ideology (left-right)") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgCarbonIntensity)) + labs(title = "Average Carbon Intensity 1998-2020", x = "Year") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgEnergyIntensity)) + labs(title = "Average Energy Intensity 1998-2020", x = "Year") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgEmissionsPerCapita)) + labs(title = "Average Per Capita Emissions 1998-2020", x = "Year") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgPolicy)) + labs(title = "Average Policy Score 1998-2020", x = "Year") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgCarbonScore)) + labs(title = "Average Carbon Policy Score 1998-2020", x = "Year") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = Year, y = AvgEnergyScore)) + labs(title = "Average Energy Policy Score 1998-2020", x = "Year") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = AvgGDPPerCapita, y = AvgCarbonIntensity)) + labs(title = "GDP Per Capita vs. Carbon Intensity") + theme_pubr()

ggplot(plot_data) + geom_line(aes(x = AvgGDPPerCapita, y = AvgEnergyIntensity)) + labs(title = "GDP Per Capita vs. Energy Intensity") + theme_pubr()

ggplot(panel) + geom_point(aes(x = Ideology, y = CI_Score))+ geom_smooth(aes(x = Ideology, y = CI_Score), method = "lm") + labs(title = "Ideology vs. Carbon Score 1998-2020") + theme_pubr()

ggplot(panel) + geom_point(aes(x = Ideology, y = EE_Score)) + geom_smooth(aes(x = Ideology, y = EE_Score), method = "lm") + labs(title = "Ideology vs. Energy Score 1998-2020") + theme_pubr()

ggplot(panel) + geom_point(aes(x = Ideology, y = CarbonIntensity))+ geom_smooth(aes(x = Ideology, y = CarbonIntensity), method = "lm") + labs(title = "Ideology vs. Carbon Intensity 1998-2020") + theme_pubr()

ggplot(panel) + geom_point(aes(x = Ideology, y = EnergyIntensity)) + geom_smooth(aes(x = Ideology, y = EnergyIntensity), method = "lm") + labs(title = "Ideology vs. Energy Intensity 1998-2020") + theme_pubr()

ggplot(panel) + geom_point(aes(x = CI_Score, y = CarbonIntensity)) + labs(title = "CI Score vs. Carbon Intensity 1998-2020") + theme_pubr()

ggplot(panel) + geom_point(aes(x = EE_Score, y = EnergyIntensity)) + labs(title = "EI Score vs. Energy Intensity 1998-2020") + theme_pubr()
```

**Fixed Effects Visualizations**

```{r}
fixed_m1 <- fixef(m1)
fixed_m1_no_outliers <- fixef(m1_no_outliers)
fixed_m2 <- fixef(m2)
fixed_m2_no_outliers <- fixef(m2_no_outliers)

plot(fixed_m1)
plot(fixed_m1_no_outliers)
plot(fixed_m2)
plot(fixed_m2_no_outliers)

fixed_policy <- fixef(baseline_policies)
fixed_policy_c <- fixef(baseline_carbon_policy)
fixed_policy_e <- fixef(baseline_energy_policy)

plot(fixed_policy)
plot(fixed_policy_c)
plot(fixed_policy_e)
```
