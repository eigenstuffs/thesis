---
title: "replication_preprocessing"
author: "Branden Bohrnsen"
date: "6 February 2024"
format: html
editor: visual
---

### Replication File - Data Preprocessing

Loading libraries

```{r}
rm(list = ls())
options(scipen=999)
library(tidyverse)
library(haven)
library(reshape)
library(sf)
library(tigris)
library(zoo)
library(plm)
set.seed(07151129)
```

Reading all files as they were downloaded

```{r}
emissions <- read.csv("data/raw_emissions.csv")
ci <- read.csv("data/raw_ci.csv")
ei <- read.csv("data/raw_ei.csv")
gdpcurrent <- read.csv("data/raw_currentgdp.csv")
pop <- read.csv("data/raw_pop.csv")
ideology <- read_dta("data/raw_shormccarty.dta")
employment <- read.csv("data/raw_employment.csv")
urban <- read.csv("data/raw_urban.csv")
regions <- read.csv("data/regions from cphalpert.csv")
states <- as.data.frame(state.x77)
```

State mapping to harmonize state columns

```{r}
state_mapping <- data.frame(
  Full_State = c(
    "Alabama", "Alaska", "Arizona", "Arkansas", "California",
    "Colorado", "Connecticut", "Delaware",  "DistrictofColumbia", "Florida", "Georgia",
    "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
    "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
    "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri",
    "Montana", "Nebraska", "Nevada", "NewHampshire", "NewJersey",
    "NewMexico", "NewYork", "NorthCarolina", "NorthDakota", "Ohio",
    "Oklahoma", "Oregon", "Pennsylvania", "RhodeIsland", "SouthCarolina",
    "SouthDakota", "Tennessee", "Texas", "Utah", "Vermont",
    "Virginia", "Washington", "WestVirginia", "Wisconsin", "Wyoming"
  ),
  Abbreviation = c(
    "AL", "AK", "AZ", "AR", "CA",
    "CO", "CT", "DE", "DC", "FL", "GA",
    "HI", "ID", "IL", "IN", "IA",
    "KS", "KY", "LA", "ME", "MD",
    "MA", "MI", "MN", "MS", "MO",
    "MT", "NE", "NV", "NH", "NJ",
    "NM", "NY", "NC", "ND", "OH",
    "OK", "OR", "PA", "RI", "SC",
    "SD", "TN", "TX", "UT", "VT",
    "VA", "WA", "WV", "WI", "WY"
  )
)

convert_state_name <- function(state_name) {
  if (state_name %in% state_mapping$Full_State) {
    return(state_mapping$Abbreviation[match(state_name, state_mapping$Full_State)])
  } else {
    return(state_name)
  }
}
```

Subsetting, renaming columns, and reshaping to long format

```{r}
colnames(emissions) <- emissions[4,]
emissions <- emissions[5:55,c(1,30:52)]
ci <- ci[5:56,]
colnames(ci) <- ci[1,]
ci <- ci[2:52,1:53]
ei <- ei[2:53,]
colnames(ei) <- ei[1,]
ei <- ei[2:52,1:63]
employment <- employment %>% select(-LineCode)
colnames(employment)[1:2] <- c("State", "Industry")

urban <- urban %>% select(STATE.ABBREV, X2020.PCT.URBAN.POP, X2010.PCT.URBAN.POP)
colnames(urban) <- c("State", "2020", "2010")
urban <- urban %>% filter(State %in% state_mapping$Abbreviation)
urban <- melt(urban, "State")
colnames(urban) <- c("State", "Year", "PercentUrban")

total_empl <- employment %>% filter(Industry == "Total employment (number of jobs)")
farm_empl <- employment %>% filter(Industry == "  Farm employment")
manu_empl <- employment %>% filter(Industry == "      Manufacturing")

total_empl <- total_empl %>% select(-Industry)
farm_empl <- farm_empl %>% select(-Industry)
manu_empl <- manu_empl %>% select(-Industry)

total_empl <- melt(total_empl, id = "State")
farm_empl <- melt(farm_empl, id = "State")
manu_empl <- melt(manu_empl, id = "State")

colnames(total_empl) <- c("State", "Year", "TotalEmployment")
colnames(farm_empl) <- c("State", "Year", "FarmEmployment")
colnames(manu_empl) <- c("State", "Year", "ManufacturingEmployment")

colnames(gdpcurrent) <- gdpcurrent[2,]
gdpcurrent <- gdpcurrent[3:53,1:26]

colnames(pop) <- pop[2,]
pop <- pop[3:53,1:63]

emissions <- melt(emissions, id = "State")

ci <- melt(ci, id = "State")
ei <- melt(ei, id = "State")

gdpcurrent <- melt(gdpcurrent, id = "State")

pop <- melt(pop, id = "State")

colnames(emissions) <- c("State", "Year", "Emissions")
colnames(ci) <- c("State", "Year", "CarbonIntensity")
colnames(ei) <- c("State", "Year", "EnergyIntensity")
colnames(gdpcurrent) <- c("State", "Year", "RealGDP")
colnames(pop) <- c("State", "Year", "Population")

list <- list(emissions, ci, ei, gdpcurrent, pop, urban, total_empl, manu_empl, farm_empl)
```

Applying transformations to data types and merging

```{r}
p <- data.frame()

list <- lapply(list, function(df) {
  df$State <- gsub("*", "", df$State)
  df$State <- gsub(" ", "", df$State)
  df$State <- sapply(df$State, convert_state_name)
  df$Year <- gsub("X", "", df$Year)
  df$Year <- as.numeric(df$Year)
  df[,3] <- gsub(",","",df[,3])
  df[,3] <- as.numeric(df[,3])
  df <- df[df$Year>=1998&df$Year<=2020,]
  return(df)
})

p <- Reduce(function(x, y) merge(x, y, by=c("State", "Year"), all = TRUE), list)

p <- p %>% filter(State != "DC")
```

Getting average chamber ideology

```{r}
ideology <- data.frame(
  State = ideology$st,
  Year = ideology$year,
  Ideology_House = ideology$hou_chamber,
  Ideology_Senate = ideology$sen_chamber,
  Polarization_House = ideology$h_diffs,
  Polarization_Senate = ideology$s_diffs,
  Dem_House_Median = ideology$hou_dem,
  Dem_Sen_Median = ideology$sen_dem,
  Rep_House_Median = ideology$hou_rep,
  Rep_Senate_Median = ideology$sen_rep,
  HouseMajority = ifelse(ideology$hou_rep == ideology$hou_majority, 1, 0),
  SenateMajority = ifelse(ideology$sen_rep == ideology$sen_majority, 1, 0)
)

ideology <- ideology %>%
  rowwise() %>%
  mutate(
    Ideology = mean(c_across(c(Ideology_House, Ideology_Senate)), na.rm = TRUE),
    Polarization = mean(c_across(c(Polarization_House, Polarization_Senate)), na.rm = TRUE),
    Dems = mean(c_across(c(Dem_House_Median, Dem_Sen_Median)), na.rm = TRUE),
    Reps = mean(c_across(c(Rep_House_Median, Rep_Senate_Median)), na.rm = TRUE),
    SplitLeadership = as.integer(HouseMajority != SenateMajority)
  ) %>%
  ungroup()

ideology <- ideology %>% 
  arrange(State, Year) %>%
  group_by(State) %>% 
  mutate(
    IdeologyLag1 = dplyr::lag(Ideology, 1),
    IdeologyLag2 = dplyr::lag(Ideology, 2),
    PolarizationLag1 = dplyr::lag(Polarization, 1),
    PolarizationLag2 = dplyr::lag(Polarization, 2),
    DemsLag1 = dplyr::lag(Dems, 1),
    DemsLag2 = dplyr::lag(Dems, 2),
    RepsLag1 = dplyr::lag(Reps, 1),
    RepsLag2 = dplyr::lag(Reps, 2),
    HouseMajorityLag1 = dplyr::lag(HouseMajority, 1),
    SenateMajorityLag1 = dplyr::lag(SenateMajority, 1),
    HouseMajorityLag2 = dplyr::lag(HouseMajority, 2),
    SenateMajorityLag2 = dplyr::lag(SenateMajority, 2)
  ) %>% 
  ungroup()

ideology <- ideology %>%
  group_by(Year) %>%
  mutate(Binary_Ideology = ifelse(Ideology > median(Ideology, na.rm = TRUE), 1, 0)) %>%
  mutate(Ideology_Quintile = ntile(Ideology, 5)) %>%
  ungroup() %>%
  arrange(State, Year) %>%
  group_by(State) %>%
  mutate(
    Binary_Ideology_Lag1 = lag(Binary_Ideology, 1),
    Binary_Ideology_Lag2 = lag(Binary_Ideology, 2),
    Ideology_Quintile_Lag1 = lag(Ideology_Quintile, 1),
    Ideology_Quintile_Lag2 = lag(Ideology_Quintile, 2)
  ) %>%
  ungroup()

ideology <- ideology[ideology$Year >= 1998 & ideology$Year <= 2020,]

ideology <- ideology %>% select(State, Year, starts_with("Ideology"), starts_with("Polarization"), starts_with("Binary"), starts_with("Dems"), starts_with("Reps"), starts_with("House"), starts_with("Senate"))

p <- p %>% left_join(ideology, join_by(State, Year))
```

Getting state areas and joining

```{r}
states$State <- rownames(states)
states$State <- gsub(" ","",states$State)
states$State <- sapply(states$State,convert_state_name)
states <- states[states$State!="DC",]
states <- subset(states, select = c("State", "Area"))

p <- merge(p, states, by="State")
```

Creating variables

```{r}
p$GDPPerCapita <- p$RealGDP/p$Population
p$EmissionsPerCapita <- p$Emissions/p$Population

p <- p %>% select(-Area, -RealGDP, -TotalEmployment, -FarmEmployment, -ManufacturingEmployment, -Emissions)
```

```{r}
regions <- regions %>%
  select(State = State.Code, Region)

p <- p %>% left_join(y = regions, join_by(State))
```

Export panel data as csv

```{r}
write.csv(p, "panel.csv", row.names = FALSE)
```

```{r}

```